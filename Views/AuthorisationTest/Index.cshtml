@{
    ViewData["Title"] = "Authorisation Policy Tests";
    var policyResults = ViewBag.PolicyResults as Dictionary<string, bool>;
    var currentTime = ViewBag.CurrentTime as DateTime?;
    var isBusinessHours = ViewBag.IsBusinessHours as bool?;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <h2><i class="fas fa-shield-alt"></i> Authorisation Policy Testing Dashboard</h2>
            <p class="text-muted">Test various authorisation policies against your current user profile and claims.</p>
            
            <div class="alert alert-info">
                <strong>Current Time:</strong> @(currentTime?.ToString("dddd, MMMM dd, yyyy - HH:mm") ?? "Unknown")
                <br>
                <strong>Business Hours Status:</strong> 
                <span class="badge @(isBusinessHours == true ? "bg-success" : "bg-danger")">
                    @(isBusinessHours == true ? "WITHIN BUSINESS HOURS" : "OUTSIDE BUSINESS HOURS")
                </span>
            </div>
        </div>
    </div>

    <!-- Policy Results Overview -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4><i class="fas fa-check-circle"></i> Policy Authorisation Results</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (policyResults != null)
                        {
                            @foreach (var policy in policyResults)
                            {
                                <div class="col-md-3 mb-3">
                                    <div class="card @(policy.Value ? "border-success" : "border-danger")">
                                        <div class="card-body text-center">
                                            <i class="fas @(policy.Value ? "fa-check-circle text-success" : "fa-times-circle text-danger") fa-2x mb-2"></i>
                                            <h6 class="card-title">@policy.Key</h6>
                                            <span class="badge @(policy.Value ? "bg-success" : "bg-danger")">
                                                @(policy.Value ? "AUTHORISED" : "DENIED")
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Role-Based Policies -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h5><i class="fas fa-users-cog"></i> Role-Based Authorisation Tests</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <h6>Admin Only Access</h6>
                                    <p class="small text-muted">Requires Admin, Administrator, or Global Administrator role</p>
                                    @if (policyResults?["AdminOnly"] == true)
                                    {
                                        <a href="@Url.Action("Index", "Admin")" class="btn btn-success btn-sm">
                                            <i class="fas fa-unlock"></i> Access Admin Dashboard
                                        </a>
                                    }
                                    else
                                    {
                                        <button class="btn btn-danger btn-sm" disabled>
                                            <i class="fas fa-lock"></i> Access Denied
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <h6>Manager or Admin</h6>
                                    <p class="small text-muted">Requires Manager, Admin, or Administrator role</p>
                                    @if (policyResults?["ManagerOrAdmin"] == true)
                                    {
                                        <a href="@Url.Action("Index", "Manager")" class="btn btn-success btn-sm">
                                            <i class="fas fa-unlock"></i> Access Manager Dashboard
                                        </a>
                                    }
                                    else
                                    {
                                        <button class="btn btn-danger btn-sm" disabled>
                                            <i class="fas fa-lock"></i> Access Denied
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>

    <!-- User Information -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-dark text-white">
                    <h5><i class="fas fa-user-shield"></i> Logged In Users Information</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <strong>User Identity:</strong><br>
                            <code>@User.Identity?.Name</code>
                        </div>
                        <div class="col-md-4">
                            <strong>User Roles:</strong><br>
                            @{
                                var userRoles = User.FindAll("roles")
                                    .Union(User.FindAll(System.Security.Claims.ClaimTypes.Role))
                                    .Union(User.FindAll("groups"))
                                    .Select(c => c.Value)
                                    .Distinct()
                                    .ToList();
                            }
                            @if (userRoles.Any())
                            {
                                @foreach (var role in userRoles)
                                {
                                    <span class="badge bg-primary me-1">@role</span>
                                }
                            }
                            else
                            {
                                <span class="text-muted">No roles found</span>
                            }
                        </div>
                        <div class="col-md-4">
                            <strong>Department:</strong><br>
                            @{
                                var department = User.FindFirst("department")?.Value ?? User.FindFirst("extension_Department")?.Value;
                            }
                            @if (!string.IsNullOrEmpty(department))
                            {
                                <span class="badge bg-info">@department</span>
                            }
                            else
                            {
                                <span class="text-muted">No department found</span>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a href="@Url.Action("UserInfo", "AuthorisationTest")" class="btn btn-outline-primary">
                        <i class="fas fa-user"></i> Detailed User Info
                    </a>
                    <a href="@Url.Action("Details", "Profile")" class="btn btn-outline-secondary">
                        <i class="fas fa-id-card"></i> Full Profile
                    </a>
                    <a href="@Url.Action("DebugClaims", "Profile")" class="btn btn-outline-info">
                        <i class="fas fa-bug"></i> Debug Claims
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Auto-refresh the page every 60 seconds to update business hours status
setTimeout(function() {
    location.reload();
}, 60000);
</script>